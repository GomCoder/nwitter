{"ast":null,"code":"var _jsxFileName = \"/Users/gomcoder_mac/Desktop/Study/React/nwitter/nwitter/src/components/Nweet.js\",\n  _s = $RefreshSig$();\nimport { React, useState } from \"react\";\nimport { dbService } from \"fbase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Nweet = _ref => {\n  _s();\n  let {\n    nweetObj,\n    isOwner\n  } = _ref;\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n  //삭제 버튼\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"삭제하시겠습니까?\");\n    console.log(ok);\n    if (ok) {\n      console.log(nweetObj.id);\n      const data = await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      console.log(data);\n    }\n  };\n  const toggleEditing = () => setEditing(prev => !prev);\n  const onChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setNewNweet(value);\n  };\n  const onSubmit = async event => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet\n    });\n    setEditing;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: editing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: onChange,\n          value: newNweet,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Update Nweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleEditing,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: nweetObj.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), isOwner && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onDeleteClick,\n          children: \"Delete Nweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleEditing,\n          children: \"Edit Nweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(Nweet, \"ZsFpsd+1jsV0959xbhQ2jq8vErk=\");\n_c = Nweet;\nexport default Nweet;\nvar _c;\n$RefreshReg$(_c, \"Nweet\");","map":{"version":3,"names":["React","useState","dbService","jsxDEV","_jsxDEV","Fragment","_Fragment","Nweet","_ref","_s","nweetObj","isOwner","editing","setEditing","newNweet","setNewNweet","text","onDeleteClick","ok","window","confirm","console","log","id","data","doc","delete","toggleEditing","prev","onChange","event","target","value","onSubmit","preventDefault","update","children","required","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["/Users/gomcoder_mac/Desktop/Study/React/nwitter/nwitter/src/components/Nweet.js"],"sourcesContent":["import {React, useState} from \"react\";\nimport { dbService } from \"fbase\";\n\nconst Nweet = ({nweetObj, isOwner}) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n    //삭제 버튼\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"삭제하시겠습니까?\");\n        console.log(ok);\n\n        if(ok) {\n            console.log(nweetObj.id);\n            const data = await dbService.doc(`nweets/${nweetObj.id}`).delete();\n            console.log(data);\n        }\n    };\n\n    const toggleEditing = () => setEditing((prev) => !prev);\n\n    const onChange = (event) => {\n        const {\n            target: {value},\n        } = event;\n        setNewNweet(value);\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n       await dbService.doc(`nweets/${nweetObj.id}`).update({text: newNweet});\n       setEditing\n    }\n\n    return (\n        <div>\n            {editing ?(\n                <>\n                    <form onSubmit={onSubmit}>\n                        <input onChange={onChange} value={newNweet} required />\n                        <input type=\"submit\" value=\"Update Nweet\" />\n                    </form>\n                    <button onClick={toggleEditing}>Cancel</button>\n                </>\n            ):(\n                <>\n                    <h4>{nweetObj.text}</h4>\n                    {isOwner && (\n                        <>\n                            <button onClick={onDeleteClick}>Delete Nweet</button>\n                            <button onClick={toggleEditing}>Edit Nweet</button>\n                        </>\n                    )}\n                </>\n            )}    \n            \n        </div>\n    );\n};\n\nexport default Nweet;"],"mappings":";;AAAA,SAAQA,KAAK,EAAEC,QAAQ,QAAO,OAAO;AACrC,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,KAAK,GAAGC,IAAA,IAAyB;EAAAC,EAAA;EAAA,IAAxB;IAACC,QAAQ;IAAEC;EAAO,CAAC,GAAAH,IAAA;EAC9B,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAACS,QAAQ,CAACM,IAAI,CAAC;;EAEvD;EACA,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,EAAE,GAAGC,MAAM,CAACC,OAAO,CAAC,WAAW,CAAC;IACtCC,OAAO,CAACC,GAAG,CAACJ,EAAE,CAAC;IAEf,IAAGA,EAAE,EAAE;MACHG,OAAO,CAACC,GAAG,CAACZ,QAAQ,CAACa,EAAE,CAAC;MACxB,MAAMC,IAAI,GAAG,MAAMtB,SAAS,CAACuB,GAAG,CAAE,UAASf,QAAQ,CAACa,EAAG,EAAC,CAAC,CAACG,MAAM,EAAE;MAClEL,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;IACrB;EACJ,CAAC;EAED,MAAMG,aAAa,GAAGA,CAAA,KAAMd,UAAU,CAAEe,IAAI,IAAK,CAACA,IAAI,CAAC;EAEvD,MAAMC,QAAQ,GAAIC,KAAK,IAAK;IACxB,MAAM;MACFC,MAAM,EAAE;QAACC;MAAK;IAClB,CAAC,GAAGF,KAAK;IACTf,WAAW,CAACiB,KAAK,CAAC;EACtB,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAOH,KAAK,IAAK;IAC9BA,KAAK,CAACI,cAAc,EAAE;IACvB,MAAMhC,SAAS,CAACuB,GAAG,CAAE,UAASf,QAAQ,CAACa,EAAG,EAAC,CAAC,CAACY,MAAM,CAAC;MAACnB,IAAI,EAAEF;IAAQ,CAAC,CAAC;IACrED,UAAU;EACb,CAAC;EAED,oBACIT,OAAA;IAAAgC,QAAA,EACKxB,OAAO,gBACJR,OAAA,CAAAE,SAAA;MAAA8B,QAAA,gBACIhC,OAAA;QAAM6B,QAAQ,EAAEA,QAAS;QAAAG,QAAA,gBACrBhC,OAAA;UAAOyB,QAAQ,EAAEA,QAAS;UAACG,KAAK,EAAElB,QAAS;UAACuB,QAAQ;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eACvDrC,OAAA;UAAOsC,IAAI,EAAC,QAAQ;UAACV,KAAK,EAAC;QAAc;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACzC,eACPrC,OAAA;QAAQuC,OAAO,EAAEhB,aAAc;QAAAS,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA,gBAChD,gBAEHrC,OAAA,CAAAE,SAAA;MAAA8B,QAAA,gBACIhC,OAAA;QAAAgC,QAAA,EAAK1B,QAAQ,CAACM;MAAI;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,EACvB9B,OAAO,iBACJP,OAAA,CAAAE,SAAA;QAAA8B,QAAA,gBACIhC,OAAA;UAAQuC,OAAO,EAAE1B,aAAc;UAAAmB,QAAA,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,eACrDrC,OAAA;UAAQuC,OAAO,EAAEhB,aAAc;UAAAS,QAAA,EAAC;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA,gBAE1D;IAAA;EAER;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEC;AAEd,CAAC;AAAChC,EAAA,CAvDIF,KAAK;AAAAqC,EAAA,GAALrC,KAAK;AAyDX,eAAeA,KAAK;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}