{"ast":null,"code":"var _jsxFileName = \"/Users/gomcoder_mac/Desktop/Study/React/nwitter/nwitter/src/routes/Auth.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { authService } from \"../fbase\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signInWithPopup, GoogleAuthProvider, GithubAuthProvider } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Auth = () => {\n  _s();\n  const [email, setEmail] = useState(\"\"); //email\n  const [password, setPassword] = useState(\"\"); //password\n  const [newAccount, setNewAccount] = useState(true); //Account\n  const [error, setError] = useState(\"\");\n  const toggleAccount = () => setNewAccount(prev => !prev); //Toggle Account\n\n  //상태 변화\n  const onChange = event => {\n    const {\n      target: {\n        name,\n        value\n      }\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  //Submit 버튼\n  const onSubmit = async event => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await createUserWithEmailAndPassword(authService, email, password);\n      } else {\n        //log in\n        data = await signInWithEmailAndPassword(authService, email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  //소셜 로그인 버튼\n  const onSocialClick = async event => {\n    // console.log(event.target.name);\n    const {\n      target: {\n        name\n      }\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      //Google 소셜 로그인\n      provider = new GoogleAuthProvider();\n    } else if (name === \"github\") {\n      //Github 소셜 로그인\n      provider = new GithubAuthProvider();\n    }\n    const data = await signInWithPopup(authService, provider);\n    console.log(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSocialClick,\n        name: \"google\",\n        children: \"Continue with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSocialClick,\n        name: \"github\",\n        children: \"Continue with Github\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(Auth, \"PzQQNDqROVuSUwGcld31eLJW8SE=\");\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["useState","authService","createUserWithEmailAndPassword","signInWithEmailAndPassword","signInWithPopup","GoogleAuthProvider","GithubAuthProvider","jsxDEV","_jsxDEV","Auth","_s","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","toggleAccount","prev","onChange","event","target","name","value","onSubmit","preventDefault","data","console","log","message","onSocialClick","provider","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gomcoder_mac/Desktop/Study/React/nwitter/nwitter/src/routes/Auth.js"],"sourcesContent":["import { useState } from \"react\";\nimport { authService} from \"../fbase\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signInWithPopup,\n    GoogleAuthProvider, GithubAuthProvider} from \"firebase/auth\";\n\nconst Auth = () => {\n    const [email, setEmail] = useState(\"\"); //email\n    const [password, setPassword] = useState(\"\"); //password\n    const [newAccount, setNewAccount] = useState(true); //Account\n    const [error, setError] = useState(\"\");\n    const toggleAccount = () => setNewAccount((prev) => !prev); //Toggle Account\n\n    //상태 변화\n    const onChange = (event) => {\n        const {\n            target: {name, value},\n        } = event;\n\n        if(name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    };\n\n    //Submit 버튼\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if(newAccount) {\n                data = await createUserWithEmailAndPassword(authService, email, password);\n            } else {\n                //log in\n                data = await signInWithEmailAndPassword(authService, email, password);\n            }\n            console.log(data);\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n\n    //소셜 로그인 버튼\n    const onSocialClick = async (event) => {\n        // console.log(event.target.name);\n        const {\n            target: {name},\n        } = event;\n\n        let provider;\n\n        if(name === \"google\") { //Google 소셜 로그인\n            provider = new GoogleAuthProvider();\n        } else if (name === \"github\") { //Github 소셜 로그인\n            provider = new GithubAuthProvider();\n        }\n        \n        const data = await signInWithPopup(authService, provider);\n        console.log(data);\n        \n    };\n\n    return(\n        <div>\n            \n\n            <div>\n                <button onClick={onSocialClick} name=\"google\">\n                    Continue with Google\n                </button>\n                <button onClick={onSocialClick} name=\"github\">\n                    Continue with Github\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Auth;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAO,UAAU;AACrC,SAASC,8BAA8B,EAAEC,0BAA0B,EAAEC,eAAe,EAChFC,kBAAkB,EAAEC,kBAAkB,QAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACpD,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMmB,aAAa,GAAGA,CAAA,KAAMH,aAAa,CAAEI,IAAI,IAAK,CAACA,IAAI,CAAC,CAAC,CAAC;;EAE5D;EACA,MAAMC,QAAQ,GAAIC,KAAK,IAAK;IACxB,MAAM;MACFC,MAAM,EAAE;QAACC,IAAI;QAAEC;MAAK;IACxB,CAAC,GAAGH,KAAK;IAET,IAAGE,IAAI,KAAK,OAAO,EAAE;MACjBZ,QAAQ,CAACa,KAAK,CAAC;IACnB,CAAC,MAAM,IAAID,IAAI,KAAK,UAAU,EAAE;MAC5BV,WAAW,CAACW,KAAK,CAAC;IACtB;EACJ,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAG,MAAOJ,KAAK,IAAK;IAC9BA,KAAK,CAACK,cAAc,EAAE;IACtB,IAAI;MACA,IAAIC,IAAI;MACR,IAAGb,UAAU,EAAE;QACXa,IAAI,GAAG,MAAM1B,8BAA8B,CAACD,WAAW,EAAEU,KAAK,EAAEE,QAAQ,CAAC;MAC7E,CAAC,MAAM;QACH;QACAe,IAAI,GAAG,MAAMzB,0BAA0B,CAACF,WAAW,EAAEU,KAAK,EAAEE,QAAQ,CAAC;MACzE;MACAgB,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACrB,CAAC,CAAC,OAAOX,KAAK,EAAE;MACZC,QAAQ,CAACD,KAAK,CAACc,OAAO,CAAC;IAC3B;EACJ,CAAC;;EAED;EACA,MAAMC,aAAa,GAAG,MAAOV,KAAK,IAAK;IACnC;IACA,MAAM;MACFC,MAAM,EAAE;QAACC;MAAI;IACjB,CAAC,GAAGF,KAAK;IAET,IAAIW,QAAQ;IAEZ,IAAGT,IAAI,KAAK,QAAQ,EAAE;MAAE;MACpBS,QAAQ,GAAG,IAAI5B,kBAAkB,EAAE;IACvC,CAAC,MAAM,IAAImB,IAAI,KAAK,QAAQ,EAAE;MAAE;MAC5BS,QAAQ,GAAG,IAAI3B,kBAAkB,EAAE;IACvC;IAEA,MAAMsB,IAAI,GAAG,MAAMxB,eAAe,CAACH,WAAW,EAAEgC,QAAQ,CAAC;IACzDJ,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EAErB,CAAC;EAED,oBACIpB,OAAA;IAAA0B,QAAA,eAGI1B,OAAA;MAAA0B,QAAA,gBACI1B,OAAA;QAAQ2B,OAAO,EAAEH,aAAc;QAACR,IAAI,EAAC,QAAQ;QAAAU,QAAA,EAAC;MAE9C;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACT/B,OAAA;QAAQ2B,OAAO,EAAEH,aAAc;QAACR,IAAI,EAAC,QAAQ;QAAAU,QAAA,EAAC;MAE9C;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACP;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd,CAAC;AAAC7B,EAAA,CAvEID,IAAI;AAAA+B,EAAA,GAAJ/B,IAAI;AAyEV,eAAeA,IAAI;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}