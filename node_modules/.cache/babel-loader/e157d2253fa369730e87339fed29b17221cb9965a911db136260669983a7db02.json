{"ast":null,"code":"var _jsxFileName = \"/Users/gomcoder_mac/Desktop/Study/React/nwitter/nwitter/src/components/AuthForm.js\",\n  _s = $RefreshSig$();\nimport { async } from \"@firebase/util\";\nimport { authService } from \"fbase\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AuthForm = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = event => {\n    const {\n      target: {\n        name,\n        value\n      }\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async event => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        //create Account\n        data = await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        //log in\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount(prev => !prev);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Email\",\n        required: true,\n        value: email,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Password\",\n        required: true,\n        value: password,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: newAccount ? \"Create Account\" : \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: toggleAccount,\n      children: newAccount ? \"Sign In\" : \"Create Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(AuthForm, \"PzQQNDqROVuSUwGcld31eLJW8SE=\");\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["async","authService","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","AuthForm","_s","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","preventDefault","data","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","toggleAccount","prev","children","type","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/gomcoder_mac/Desktop/Study/React/nwitter/nwitter/src/components/AuthForm.js"],"sourcesContent":["import { async } from \"@firebase/util\";\nimport { authService } from \"fbase\";\nimport { useState } from \"react\";\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const onChange = (event) => {\n        const {\n            target: {name, value},\n        } = event;\n\n        if(name === \"email\") {\n            setEmail(value);\n        } else if(name === \"password\") {\n            setPassword(value);\n        }\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n\n        try {\n            let data;\n\n            if(newAccount) {\n                //create Account\n                data = await authService.createUserWithEmailAndPassword(\n                    email, password\n                );\n            } else {\n                //log in\n                data = await authService.signInWithEmailAndPassword(email, password);\n            }\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n\n    return (\n        <>\n            <form onSubmit={onSubmit}>\n                <input \n                    name=\"email\" \n                    type=\"email\" \n                    placeholder=\"Email\" \n                    required \n                    value={email} \n                    onChange={onChange}/>\n                <input \n                    name=\"password\" \n                    type=\"password\" \n                    placeholder=\"Password\" \n                    required \n                    value={password} \n                    onChange={onChange}/>\n                <input type=\"submit\" value={ newAccount ? \"Create Account\" : \"Log In\"} />\n                <br />{error}\n            </form>\n            <span onClick={toggleAccount}>\n                {newAccount ? \"Sign In\" : \"Create Account\"}\n            </span>\n        </>\n    );\n};\n\nexport default AuthForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}