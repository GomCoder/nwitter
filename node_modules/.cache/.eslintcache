[{"/Users/gomcoder_mac/nwitter/src/index.js":"1","/Users/gomcoder_mac/nwitter/src/components/App.js":"2","/Users/gomcoder_mac/nwitter/src/components/Router.js":"3","/Users/gomcoder_mac/nwitter/src/fbase.js":"4","/Users/gomcoder_mac/nwitter/src/components/Navigation.js":"5","/Users/gomcoder_mac/nwitter/src/routes/Home.js":"6","/Users/gomcoder_mac/nwitter/src/routes/Profile.js":"7","/Users/gomcoder_mac/nwitter/src/routes/Auth.js":"8","/Users/gomcoder_mac/nwitter/src/components/AuthForm.js":"9","/Users/gomcoder_mac/nwitter/src/components/Nweet.js":"10","/Users/gomcoder_mac/nwitter/src/components/NweetFactory.js":"11"},{"size":250,"mtime":1677416636895,"results":"12","hashOfConfig":"13"},{"size":1071,"mtime":1677416636893,"results":"14","hashOfConfig":"13"},{"size":903,"mtime":1677416636894,"results":"15","hashOfConfig":"13"},{"size":706,"mtime":1677416636894,"results":"16","hashOfConfig":"13"},{"size":403,"mtime":1677416636893,"results":"17","hashOfConfig":"13"},{"size":968,"mtime":1677416636895,"results":"18","hashOfConfig":"13"},{"size":1345,"mtime":1677416636895,"results":"19","hashOfConfig":"13"},{"size":2295,"mtime":1677416636895,"results":"20","hashOfConfig":"13"},{"size":2045,"mtime":1677416636893,"results":"21","hashOfConfig":"13"},{"size":2077,"mtime":1677416636894,"results":"22","hashOfConfig":"13"},{"size":2400,"mtime":1677416636894,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15iadrx",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},"/Users/gomcoder_mac/nwitter/src/index.js",[],[],"/Users/gomcoder_mac/nwitter/src/components/App.js",["64"],[],"import { useEffect, useState } from \"react\";\nimport AppRouter from \"./Router\";\nimport { authService, updateProfile } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  \n  useEffect(()=> {\n    authService.onAuthStateChanged((user) => {\n      if(user) { \n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(false);\n      }\n      setInit(true);\n    });\n    }, []);  \n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n          ) : (\n        \"initailizing...\"\n        )}\n        <br />\n    </>\n  );\n}\n\nexport default App;\n","/Users/gomcoder_mac/nwitter/src/components/Router.js",[],[],"/Users/gomcoder_mac/nwitter/src/fbase.js",["65"],[],"import firebase from \"firebase/compat/app\";\nimport {getAuth, updateProfile} from \"firebase/auth\";\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSING_SEND_ID,\n  appId: process.env.REACT_APP_API_ID\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = getAuth();\nexport const authService = getAuth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","/Users/gomcoder_mac/nwitter/src/components/Navigation.js",[],[],"/Users/gomcoder_mac/nwitter/src/routes/Home.js",[],[],"/Users/gomcoder_mac/nwitter/src/routes/Profile.js",["66","67","68"],[],"import { authService, dbService } from \"fbase\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { async } from \"@firebase/util\";\nimport { getAuth, updateProfile } from \"firebase/auth\";\n\nconst Profile = ({userObj, refreshUser}) => {\n    let navigate = useNavigate();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n    const onLogOutClick = () => {\n        authService.signOut()\n        navigate(\"/\")\n    };    \n\n    const onChange = (event) => {\n        const {\n            target: {value},\n        } = event;\n        setNewDisplayName(value);\n    };\n\n    const onSubmit = async (event) => {\n        const auth = getAuth();\n        event.preventDefault();\n        if (userObj.displayName !== newDisplayName) {\n            await updateProfile(auth.currentUser,{ displayName: newDisplayName });\n            refreshUser();\n        }\n    };\n    \n\n    return (\n        <>\n        <form onSubmit={onSubmit}>\n            <input onChange={onChange} \n                    type=\"text\" \n                    placeholder=\"Display name\" \n                    value={newDisplayName}\n            />\n            <input type=\"submit\" value=\"Update Profile\"/>\n        </form>\n            <button onClick={onLogOutClick}>Log Out</button>\n        </>\n    );\n};\nexport default Profile;","/Users/gomcoder_mac/nwitter/src/routes/Auth.js",["69","70","71","72","73"],[],"import { useState } from \"react\";\nimport { authService} from \"../fbase\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signInWithPopup,\n    GoogleAuthProvider, GithubAuthProvider} from \"firebase/auth\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n    const [email, setEmail] = useState(\"\"); //email\n    const [password, setPassword] = useState(\"\"); //password\n    const [newAccount, setNewAccount] = useState(true); //Account\n    const [error, setError] = useState(\"\");\n    const toggleAccount = () => setNewAccount((prev) => !prev); //Toggle Account\n\n    //상태 변화\n    const onChange = (event) => {\n        const {\n            target: {name, value},\n        } = event;\n\n        if(name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    };\n\n    //Submit 버튼\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if(newAccount) {\n                data = await createUserWithEmailAndPassword(authService, email, password);\n            } else {\n                //log in\n                data = await signInWithEmailAndPassword(authService, email, password);\n            }\n            console.log(data);\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n\n    //소셜 로그인 버튼\n    const onSocialClick = async (event) => {\n        // console.log(event.target.name);\n        const {\n            target: {name},\n        } = event;\n\n        let provider;\n\n        if(name === \"google\") { //Google 소셜 로그인\n            provider = new GoogleAuthProvider();\n        } else if (name === \"github\") { //Github 소셜 로그인\n            provider = new GithubAuthProvider();\n        }\n        \n        const data = await signInWithPopup(authService, provider);\n    };\n\n    return(\n        <div>\n            <AuthForm />\n            <div>\n                <button onClick={onSocialClick} name=\"google\">\n                    Continue with Google\n                </button>\n                <button onClick={onSocialClick} name=\"github\">\n                    Continue with Github\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Auth;","/Users/gomcoder_mac/nwitter/src/components/AuthForm.js",["74","75"],[],"import { async } from \"@firebase/util\";\nimport { authService } from \"fbase\";\nimport { useState } from \"react\";\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const onChange = (event) => {\n        const {\n            target: {name, value},\n        } = event;\n\n        if(name === \"email\") {\n            setEmail(value);\n        } else if(name === \"password\") {\n            setPassword(value);\n        }\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n\n        try {\n            let data;\n\n            if(newAccount) {\n                //create Account\n                data = await authService.createUserWithEmailAndPassword(\n                    email, password\n                );\n            } else {\n                //log in\n                data = await authService.signInWithEmailAndPassword(email, password);\n            }\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n\n    return (\n        <>\n            <form onSubmit={onSubmit}>\n                <input \n                    name=\"email\" \n                    type=\"email\" \n                    placeholder=\"Email\" \n                    required \n                    value={email} \n                    onChange={onChange}/>\n                <input \n                    name=\"password\" \n                    type=\"password\" \n                    placeholder=\"Password\" \n                    required \n                    value={password} \n                    onChange={onChange}/>\n                <input type=\"submit\" value={ newAccount ? \"Create Account\" : \"Log In\"} />\n                <br />{error}\n            </form>\n            <span onClick={toggleAccount}>\n                {newAccount ? \"Sign In\" : \"Create Account\"}\n            </span>\n        </>\n    );\n};\n\nexport default AuthForm;","/Users/gomcoder_mac/nwitter/src/components/Nweet.js",["76"],[],"import {React, useState} from \"react\";\nimport { dbService, storageService } from \"fbase\";\n\nconst Nweet = ({nweetObj, isOwner}) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n    //삭제 버튼\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"삭제하시겠습니까?\");\n\n        if(ok) {\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\n\n            if(nweetObj.attachmentUrl !== \"\") {\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n            }\n        }\n    };\n\n    const toggleEditing = () => setEditing((prev) => !prev);\n\n    const onChange = (event) => {\n        const {\n            target: {value},\n        } = event;\n        setNewNweet(value);\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n       await dbService.doc(`nweets/${nweetObj.id}`).update({text: newNweet});\n       setEditing(false);\n    }\n\n    return (\n        <div>\n            {editing ?(\n                <>\n                    <form onSubmit={onSubmit}>\n                        <input onChange={onChange} value={newNweet} required />\n                        <input type=\"submit\" value=\"Update Nweet\" />\n                    </form>\n                    <button onClick={toggleEditing}>Cancel</button>\n                </>\n            ):(\n                <>\n                    <h4>{nweetObj.text}</h4>\n                    {nweetObj.attachmentUrl && (\n                        <>\n                            <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\n                        </>\n                    )}\n                    <br />\n                    {isOwner && (\n                        <>\n                            <button onClick={onDeleteClick}>Delete Nweet</button>\n                            <button onClick={toggleEditing}>Edit Nweet</button>\n                        </>\n                    )}\n                </>\n            )}    \n            \n        </div>\n    );\n};\n\nexport default Nweet;","/Users/gomcoder_mac/nwitter/src/components/NweetFactory.js",["77","78","79","80"],[],"import { useState, useEffect } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Nweet from \"components/Nweet\";\nimport Home from \"routes/Home\";\n\nconst NweetFactory = ({userObj}) => {    \n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");    \n    const onSubmit = async (event) => {\n        event.preventDefault();\n        let attachmentUrl = \"\";\n\n        if(attachment !== \"\") {\n            const attachmentRef = storageService\n            .ref()\n            .child(`${userObj.uid}/${uuidv4()}`);\n            const reponse = await attachmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await reponse.ref.getDownloadURL();\n        }\n\n        const nweetObj = {\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl,\n        }\n\n\n        await dbService.collection(\"nweets\").add(nweetObj);\n        setNweet(\"\");\n        setAttachment(\"\");\n    };\n\n    const onChange = (event) => {\n        event.preventDefault();\n\n        const {\n            target: {value},\n        } = event;\n        setNweet(value);\n    };\n\n    const onFileChange = (event) => {\n        const {\n            target: {files},\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {\n                currentTarget: {result},\n            } = finishedEvent;\n            setAttachment(result);\n        }\n        reader.readAsDataURL(theFile);\n    };\n\n    const onClearAttachment = () => setAttachment(\"\");\n\n    return (\n        <form onSubmit={onSubmit}>\n                <input\n                    value={nweet}\n                    onChange={onChange}\n                    type=\"text\"\n                    placeholder=\"What's on your mind?\"\n                    maxLength={120}\n                />\n                <input type=\"file\" accept=\"image/*\" onChange={onFileChange}/>\n                <input type=\"submit\" value=\"Nweet\"/>\n                {attachment && (\n                    <div>\n                        <img src={attachment} width=\"50px\" height=\"50px\" />\n                        <button onClick={onClearAttachment}> Clear </button>\n                    </div>\n                )}\n        </form>\n    );\n};\n\nexport default NweetFactory;",{"ruleId":"81","severity":1,"message":"82","line":3,"column":23,"nodeType":"83","messageId":"84","endLine":3,"endColumn":36},{"ruleId":"81","severity":1,"message":"82","line":2,"column":18,"nodeType":"83","messageId":"84","endLine":2,"endColumn":31},{"ruleId":"81","severity":1,"message":"85","line":1,"column":23,"nodeType":"83","messageId":"84","endLine":1,"endColumn":32},{"ruleId":"81","severity":1,"message":"86","line":3,"column":10,"nodeType":"83","messageId":"84","endLine":3,"endColumn":19},{"ruleId":"81","severity":1,"message":"87","line":4,"column":10,"nodeType":"83","messageId":"84","endLine":4,"endColumn":15},{"ruleId":"81","severity":1,"message":"88","line":11,"column":12,"nodeType":"83","messageId":"84","endLine":11,"endColumn":17},{"ruleId":"81","severity":1,"message":"89","line":12,"column":11,"nodeType":"83","messageId":"84","endLine":12,"endColumn":24},{"ruleId":"81","severity":1,"message":"90","line":15,"column":11,"nodeType":"83","messageId":"84","endLine":15,"endColumn":19},{"ruleId":"81","severity":1,"message":"91","line":28,"column":11,"nodeType":"83","messageId":"84","endLine":28,"endColumn":19},{"ruleId":"81","severity":1,"message":"92","line":59,"column":15,"nodeType":"83","messageId":"84","endLine":59,"endColumn":19},{"ruleId":"81","severity":1,"message":"87","line":1,"column":10,"nodeType":"83","messageId":"84","endLine":1,"endColumn":15},{"ruleId":"81","severity":1,"message":"92","line":36,"column":17,"nodeType":"83","messageId":"84","endLine":36,"endColumn":21},{"ruleId":"93","severity":1,"message":"94","line":51,"column":29,"nodeType":"95","endLine":51,"endColumn":92},{"ruleId":"81","severity":1,"message":"86","line":1,"column":20,"nodeType":"83","messageId":"84","endLine":1,"endColumn":29},{"ruleId":"81","severity":1,"message":"96","line":4,"column":8,"nodeType":"83","messageId":"84","endLine":4,"endColumn":13},{"ruleId":"81","severity":1,"message":"97","line":5,"column":8,"nodeType":"83","messageId":"84","endLine":5,"endColumn":12},{"ruleId":"93","severity":1,"message":"94","line":74,"column":25,"nodeType":"95","endLine":74,"endColumn":76},"no-unused-vars","'updateProfile' is defined but never used.","Identifier","unusedVar","'dbService' is defined but never used.","'useEffect' is defined but never used.","'async' is defined but never used.","'error' is assigned a value but never used.","'toggleAccount' is assigned a value but never used.","'onChange' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","'data' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Nweet' is defined but never used.","'Home' is defined but never used."]