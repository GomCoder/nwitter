[{"/Users/gomcoder_mac/nwitter/src/index.js":"1","/Users/gomcoder_mac/nwitter/src/components/App.js":"2","/Users/gomcoder_mac/nwitter/src/components/Router.js":"3","/Users/gomcoder_mac/nwitter/src/fbase.js":"4","/Users/gomcoder_mac/nwitter/src/components/Navigation.js":"5","/Users/gomcoder_mac/nwitter/src/routes/Home.js":"6","/Users/gomcoder_mac/nwitter/src/routes/Profile.js":"7","/Users/gomcoder_mac/nwitter/src/routes/Auth.js":"8","/Users/gomcoder_mac/nwitter/src/components/AuthForm.js":"9","/Users/gomcoder_mac/nwitter/src/components/Nweet.js":"10","/Users/gomcoder_mac/nwitter/src/components/NweetFactory.js":"11"},{"size":270,"mtime":1677422717226,"results":"12","hashOfConfig":"13"},{"size":1063,"mtime":1677798863703,"results":"14","hashOfConfig":"13"},{"size":886,"mtime":1677425116358,"results":"15","hashOfConfig":"13"},{"size":732,"mtime":1677800588427,"results":"16","hashOfConfig":"13"},{"size":1358,"mtime":1677425887952,"results":"17","hashOfConfig":"13"},{"size":1376,"mtime":1677797051925,"results":"18","hashOfConfig":"13"},{"size":2021,"mtime":1677801339550,"results":"19","hashOfConfig":"13"},{"size":2784,"mtime":1677795272337,"results":"20","hashOfConfig":"13"},{"size":2330,"mtime":1677795028487,"results":"21","hashOfConfig":"13"},{"size":2827,"mtime":1677802188424,"results":"22","hashOfConfig":"13"},{"size":3739,"mtime":1677802086132,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15iadrx",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},"/Users/gomcoder_mac/nwitter/src/index.js",[],[],"/Users/gomcoder_mac/nwitter/src/components/App.js",[],[],"/Users/gomcoder_mac/nwitter/src/components/Router.js",[],[],"/Users/gomcoder_mac/nwitter/src/fbase.js",["62"],[],"import {initializeApp} from \"firebase/app\";\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\";\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSING_SEND_ID,\n  appId: process.env.REACT_APP_API_ID\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","/Users/gomcoder_mac/nwitter/src/components/Navigation.js",[],[],"/Users/gomcoder_mac/nwitter/src/routes/Home.js",[],[],"/Users/gomcoder_mac/nwitter/src/routes/Profile.js",[],[],"/Users/gomcoder_mac/nwitter/src/routes/Auth.js",["63","64","65","66","67"],[],"import { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signInWithPopup,\n    GoogleAuthProvider, GithubAuthProvider} from \"firebase/auth\";\nimport AuthForm from \"components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter, faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\n\n\nconst Auth = () => {\n    const [email, setEmail] = useState(\"\"); //email\n    const [password, setPassword] = useState(\"\"); //password\n    const [newAccount, setNewAccount] = useState(true); //Account\n    const [error, setError] = useState(\"\");\n    const toggleAccount = () => setNewAccount((prev) => !prev); //Toggle Account\n\n    //상태 변화\n    const onChange = (event) => {\n        const {\n            target: {name, value},\n        } = event;\n\n        if(name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    };\n\n    //Submit 버튼\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if(newAccount) {\n                data = await createUserWithEmailAndPassword(authService, email, password);\n            } else {\n                //log in\n                data = await signInWithEmailAndPassword(authService, email, password);\n            }\n            console.log(data);\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n\n    //소셜 로그인 버튼\n    const onSocialClick = async (event) => {\n        // console.log(event.target.name);\n        const {\n            target: {name},\n        } = event;\n\n        let provider;\n\n        if(name === \"google\") { //Google 소셜 로그인\n            provider = new GoogleAuthProvider();\n        } else if (name === \"github\") { //Github 소셜 로그인\n            provider = new GithubAuthProvider();\n        }\n        \n        const data = await signInWithPopup(authService, provider);\n    };\n\n    return(\n        <div className=\"authContainer\">\n            <FontAwesomeIcon \n                icon={faTwitter}\n                color={\"#04AAFF\"}\n                size=\"3x\"\n                style={{marginBottom: 30}}\n            />\n            <AuthForm />\n            <div className=\"authBtns\">\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\n                </button>\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Auth;","/Users/gomcoder_mac/nwitter/src/components/AuthForm.js",["68","69"],[],"import { async } from \"@firebase/util\";\nimport { authService } from \"fbase\";\nimport { useState } from \"react\";\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const onChange = (event) => {\n        const {\n            target: {name, value},\n        } = event;\n\n        if(name === \"email\") {\n            setEmail(value);\n        } else if(name === \"password\") {\n            setPassword(value);\n        }\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n\n        try {\n            let data;\n\n            if(newAccount) {\n                //create Account\n                data = await authService.createUserWithEmailAndPassword(\n                    email, password\n                );\n            } else {\n                //log in\n                data = await authService.signInWithEmailAndPassword(email, password);\n            }\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"container\">\n                <input \n                    name=\"email\" \n                    type=\"text\" \n                    placeholder=\"Email\" \n                    required \n                    value={email} \n                    onChange={onChange}\n                    className=\"authInput\"    \n                />\n                <input \n                    name=\"password\" \n                    type=\"password\" \n                    placeholder=\"Password\" \n                    required \n                    value={password} \n                    onChange={onChange}\n                    className=\"authInput\"      \n                />\n                <input type=\"submit\" value={ newAccount ? \"Create Account\" : \"Log In\"} \n                className=\"authInput authSubmit\" \n                />\n                <br />{error && <span className=\"authError\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">\n                {newAccount ? \"Sign In\" : \"Create Account\"}\n            </span>\n        </>\n    );\n};\n\nexport default AuthForm;","/Users/gomcoder_mac/nwitter/src/components/Nweet.js",["70"],[],"import {React, useState} from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({nweetObj, isOwner}) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n    //삭제 버튼\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"삭제하시겠습니까?\");\n\n        if(ok) {\n            const data = await dbService.doc(`nweets/${nweetObj.id}`).delete();\n\n            if(nweetObj.attachmentUrl !== \"\") {\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n            }\n        }\n    };\n\n    const toggleEditing = () => setEditing((prev) => !prev);\n\n    const onChange = (event) => {\n        const {\n            target: {value},\n        } = event;\n        setNewNweet(value);\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.doc(`nweets/${nweetObj.id}`).update({text: newNweet});\n        setEditing(false);\n    }\n\n    return (\n        <div className=\"nweet\">\n            {editing ? (\n                <>\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                        <input\n                            onChange={onChange} \n                            value={newNweet} \n                            required \n                            placeholder=\"Edit Your nweet\"\n                            autoFocus\n                            className=\"formInput\"\n                        />\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\"/>\n                    </form>\n                    <button onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                        Cancel\n                    </button>\n                </>\n            ):(\n                <>\n                    <h4>{nweetObj.text}</h4>\n                    {nweetObj.attachmentUrl && (\n                        <>\n                            <img alt=\"\" src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\"/>\n                        </>\n                    )}\n                    <br />\n                    {isOwner && (\n                        <div className=\"nweet__actions\">\n                            <span onClick={onDeleteClick}>\n                                <FontAwesomeIcon icon={faTrash} />\n                            </span>\n                            <span onClick={toggleEditing}>\n                                <FontAwesomeIcon icon={faPencilAlt} />\n                            </span>\n                        </div>\n                    )}\n                </>\n            )}    \n        </div>\n    );\n};\n\nexport default Nweet;","/Users/gomcoder_mac/nwitter/src/components/NweetFactory.js",["71"],[],"import { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {faPlus, faTimes}  from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({userObj}) => {    \n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");    \n    \n    const onSubmit = async (event) => {\n        event.preventDefault();\n\n        if(nweet === \"\") {\n            return;\n        }\n\n        let attachmentUrl = \"\";\n\n        if(attachment !== \"\") {\n            const attachmentRef = storageService\n                                    .ref()\n                                    .child(`${userObj.uid}/${uuidv4()}`);\n            const reponse = await attachmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await reponse.ref.getDownloadURL();\n  \n        }\n\n        const nweetObj = {\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl,\n        }\n\n        await dbService.collection(\"nweets\").add({\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl,\n        });\n        \n        setNweet(\"\");\n        setAttachment(\"\");\n        \n    };\n\n    const onChange = (event) => {\n        event.preventDefault();\n\n        const {\n            target: {value},\n        } = event;\n        setNweet(value);\n    };\n\n    const onFileChange = (event) => {\n        const {\n            target: {files},\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {\n                currentTarget: {result},\n            } = finishedEvent;\n            setAttachment(result);\n        }\n        if(Boolean(theFile)) {\n            reader.readAsDataURL(theFile);\n        }\n    };\n\n    const onClearAttachment = () => setAttachment(\"\");\n\n    return (\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div className=\"factoryInput__container\">\n                <input\n                    className=\"factoryInput__input\"\n                        value={nweet}\n                        onChange={onChange}\n                        type=\"text\"\n                        placeholder=\"What's on your mind?\"\n                        maxLength={120}\n                />\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n            </div>\n            <label htmlFor=\"attach-file\" className=\"factory__label\">\n                <span style={{marginRight: 10}}>Add Photos</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>\n            <input \n                id=\"attach-file\"\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={onFileChange}\n\n                style ={{\n                    opacity:0,\n                }}                \n            />\n            {attachment && (\n                <div className=\"factoryForm__attachment\">\n                    <img \n                        src={attachment} \n                        style={{\n                            marginBottom: 15,\n                            backgroundImage: attachment,\n                        }}\n                        alt=\"업로드 할 이미지\"\n                    />\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                        <span>Remove</span>\n                        <FontAwesomeIcon icon={faTimes} />\n                    </div>\n                </div>\n            )}\n        </form>\n    );\n};\n\nexport default NweetFactory;",{"ruleId":"72","severity":1,"message":"73","line":1,"column":9,"nodeType":"74","messageId":"75","endLine":1,"endColumn":22},{"ruleId":"72","severity":1,"message":"76","line":14,"column":12,"nodeType":"74","messageId":"75","endLine":14,"endColumn":17},{"ruleId":"72","severity":1,"message":"77","line":15,"column":11,"nodeType":"74","messageId":"75","endLine":15,"endColumn":24},{"ruleId":"72","severity":1,"message":"78","line":18,"column":11,"nodeType":"74","messageId":"75","endLine":18,"endColumn":19},{"ruleId":"72","severity":1,"message":"79","line":31,"column":11,"nodeType":"74","messageId":"75","endLine":31,"endColumn":19},{"ruleId":"72","severity":1,"message":"80","line":62,"column":15,"nodeType":"74","messageId":"75","endLine":62,"endColumn":19},{"ruleId":"72","severity":1,"message":"81","line":1,"column":10,"nodeType":"74","messageId":"75","endLine":1,"endColumn":15},{"ruleId":"72","severity":1,"message":"80","line":36,"column":17,"nodeType":"74","messageId":"75","endLine":36,"endColumn":21},{"ruleId":"72","severity":1,"message":"80","line":15,"column":19,"nodeType":"74","messageId":"75","endLine":15,"endColumn":23},{"ruleId":"72","severity":1,"message":"82","line":29,"column":15,"nodeType":"74","messageId":"75","endLine":29,"endColumn":23},"no-unused-vars","'initializeApp' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'toggleAccount' is assigned a value but never used.","'onChange' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","'data' is assigned a value but never used.","'async' is defined but never used.","'nweetObj' is assigned a value but never used."]